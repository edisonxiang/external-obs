apiVersion: v1
kind: ServiceAccount
metadata:
  name: obs-flexvolume

---

kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: obs-flexvolume-runner
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["create", "get", "delete"]
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "create", "delete"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["list", "watch", "create", "update", "patch"]

---

kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: obs-flexvolume-role
subjects:
  - kind: ServiceAccount
    name: obs-flexvolume
    namespace: default
roleRef:
  kind: ClusterRole
  name: obs-flexvolume-runner
  apiGroup: rbac.authorization.k8s.io

---

apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: obs-flexvolume
spec:
  serviceName: "obs-flexvolume"
  template:
    metadata:
      name: obs-flexvolume
      labels:
        app: obs-flexvolume
    spec:
      serviceAccount: obs-flexvolume
      containers:
        - name: obs-flexvolume
          image: quay.io/huaweicloud/obs-flexvolume:latest
          imagePullPolicy: Always
          securityContext:
            privileged: true
            capabilities:
              add: ["SYS_ADMIN"]
            allowPrivilegeEscalation: true
          volumeMounts:
            - mountPath: /flexmnt
              name: obs-flexvolume-mount
      volumes:
        - name: obs-flexvolume-mount
          hostPath:
            path: /usr/libexec/kubernetes/kubelet-plugins/volume/exec
